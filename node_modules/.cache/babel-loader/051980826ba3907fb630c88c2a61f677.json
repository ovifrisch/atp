{"ast":null,"code":"var _jsxFileName = \"/Users/ovidiufritsch/code/tennis_atp/atp_frontend/src/components/AgeComparison/Graph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasets: [],\n      labels: []\n    };\n  }\n\n  generate_color() {\n    var o = Math.round,\n        r = Math.random,\n        s = 255;\n    return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + 1 + ')';\n  }\n\n  create_dataset(ranks, player_name) {\n    var color;\n\n    if (this.state.datasets.length < 8) {\n      console.log(this.state.datasets.length);\n      color = Graph.colors[this.state.datasets.length];\n      console.log(color);\n    } else {\n      color = this.generate_color();\n    }\n\n    return {\n      label: player_name,\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: color,\n      borderColor: color,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: color,\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: color,\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: ranks\n    };\n  }\n\n  changeAgeRange(start, end) {}\n\n  addPlayer(player_id, player_name) {\n    fetch(\"/get_ranking_history?player_id=\".concat(player_id, \"&starting_age=25&ending_age=26\")).then(response => response.json().then(data => {\n      var ranks = data['data'].map(x => x['rank']);\n      var new_labels = data['data'].map(x => x['age']);\n\n      if (new_labels.length < this.state.labels.length) {\n        new_labels = this.state.labels;\n      }\n\n      this.setState({\n        labels: new_labels,\n        datasets: [...this.state.datasets, this.create_dataset(ranks, player_name, player_id)]\n      });\n    }));\n  }\n\n  render() {\n    const datasets = this.state.datasets.map(x => x['data']);\n    const data = {\n      labels: this.state.labels,\n      datasets: datasets\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nGraph.colors = ['rgb(76, 128, 24, 1)', 'rgb(24, 76, 128, 1)', 'rgb(128, 24, 128, 1)', 'rgb(216, 12, 12, 1)', 'rgb(225, 122, 19, 1)', 'rgb(19, 225, 225, 1)', 'rgb(68, 97, 39, 1)', 'rgb(97, 39, 39, 1)'];\nexport default Graph;","map":{"version":3,"sources":["/Users/ovidiufritsch/code/tennis_atp/atp_frontend/src/components/AgeComparison/Graph.js"],"names":["React","Line","Graph","Component","constructor","props","state","datasets","labels","generate_color","o","Math","round","r","random","s","create_dataset","ranks","player_name","color","length","console","log","colors","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","changeAgeRange","start","end","addPlayer","player_id","fetch","then","response","json","map","x","new_labels","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAb;AAIA;;AAaDC,EAAAA,cAAc,GAAG;AAChB,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAb;AAAA,QAAoBC,CAAC,GAAGF,IAAI,CAACG,MAA7B;AAAA,QAAqCC,CAAC,GAAG,GAAzC;AACA,WAAO,UAAUL,CAAC,CAACG,CAAC,KAAGE,CAAL,CAAX,GAAqB,GAArB,GAA2BL,CAAC,CAACG,CAAC,KAAGE,CAAL,CAA5B,GAAsC,GAAtC,GAA4CL,CAAC,CAACG,CAAC,KAAGE,CAAL,CAA7C,GAAuD,GAAvD,GAA6D,CAA7D,GAAiE,GAAxE;AACA;;AAEDC,EAAAA,cAAc,CAACC,KAAD,EAAQC,WAAR,EAAqB;AAClC,QAAIC,KAAJ;;AACA,QAAI,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,MAApB,GAA6B,CAAjC,EAAoC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,QAAX,CAAoBa,MAAhC;AACAD,MAAAA,KAAK,GAAGjB,KAAK,CAACqB,MAAN,CAAa,KAAKjB,KAAL,CAAWC,QAAX,CAAoBa,MAAjC,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,KAJD,MAKI;AACHA,MAAAA,KAAK,GAAG,KAAKV,cAAL,EAAR;AACA;;AACD,WAAO;AACNe,MAAAA,KAAK,EAAEN,WADD;AAENO,MAAAA,IAAI,EAAE,KAFA;AAGNC,MAAAA,WAAW,EAAE,GAHP;AAINC,MAAAA,eAAe,EAAER,KAJX;AAKNS,MAAAA,WAAW,EAAET,KALP;AAMNU,MAAAA,cAAc,EAAE,MANV;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNC,MAAAA,gBAAgB,EAAE,GARZ;AASNC,MAAAA,eAAe,EAAE,OATX;AAUNC,MAAAA,gBAAgB,EAAEd,KAVZ;AAWNe,MAAAA,oBAAoB,EAAE,MAXhB;AAYNC,MAAAA,gBAAgB,EAAE,CAZZ;AAaNC,MAAAA,gBAAgB,EAAE,CAbZ;AAcNC,MAAAA,yBAAyB,EAAElB,KAdrB;AAeNmB,MAAAA,qBAAqB,EAAE,qBAfjB;AAgBNC,MAAAA,qBAAqB,EAAE,CAhBjB;AAiBNC,MAAAA,WAAW,EAAE,CAjBP;AAkBNC,MAAAA,cAAc,EAAE,EAlBV;AAmBNC,MAAAA,IAAI,EAAEzB;AAnBA,KAAP;AAqBA;;AAED0B,EAAAA,cAAc,CAACC,KAAD,EAAQC,GAAR,EAAa,CAE1B;;AAEDC,EAAAA,SAAS,CAACC,SAAD,EAAY7B,WAAZ,EAAyB;AAEjC8B,IAAAA,KAAK,0CAAmCD,SAAnC,oCAAL,CAAmFE,IAAnF,CAAwFC,QAAQ,IAC/FA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBP,IAAI,IAAI;AAC5B,UAAIzB,KAAK,GAAGyB,IAAI,CAAC,MAAD,CAAJ,CAAaU,GAAb,CAAiBC,CAAC,IAAIA,CAAC,CAAC,MAAD,CAAvB,CAAZ;AACA,UAAIC,UAAU,GAAGZ,IAAI,CAAC,MAAD,CAAJ,CAAaU,GAAb,CAAiBC,CAAC,IAAIA,CAAC,CAAC,KAAD,CAAvB,CAAjB;;AACA,UAAIC,UAAU,CAAClC,MAAX,GAAoB,KAAKd,KAAL,CAAWE,MAAX,CAAkBY,MAA1C,EAAkD;AACjDkC,QAAAA,UAAU,GAAG,KAAKhD,KAAL,CAAWE,MAAxB;AACA;;AACD,WAAK+C,QAAL,CAAc;AACb/C,QAAAA,MAAM,EAAE8C,UADK;AAEb/C,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyB,KAAKS,cAAL,CAAoBC,KAApB,EAA2BC,WAA3B,EAAwC6B,SAAxC,CAAzB;AAFG,OAAd;AAIA,KAVD,CADD;AAYA;;AAEDS,EAAAA,MAAM,GAAG;AAER,UAAMjD,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoB6C,GAApB,CAAwBC,CAAC,IAAIA,CAAC,CAAC,MAAD,CAA9B,CAAjB;AAEA,UAAMX,IAAI,GAAG;AACZlC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADP;AAEZD,MAAAA,QAAQ,EAAEA;AAFE,KAAb;AAOA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEmC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AA9FkC;;AAA9BxC,K,CASEqB,M,GAAS,CACf,qBADe,EAEf,qBAFe,EAGf,sBAHe,EAIf,qBAJe,EAKf,sBALe,EAMf,sBANe,EAOf,oBAPe,EAQf,oBARe,C;AAwFjB,eAAerB,KAAf","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nclass Graph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdatasets: [],\n\t\t\tlabels: []\n\t\t}\n\t}\n\n\tstatic colors = [\n\t\t'rgb(76, 128, 24, 1)',\n\t\t'rgb(24, 76, 128, 1)',\n\t\t'rgb(128, 24, 128, 1)',\n\t\t'rgb(216, 12, 12, 1)',\n\t\t'rgb(225, 122, 19, 1)',\n\t\t'rgb(19, 225, 225, 1)',\n\t\t'rgb(68, 97, 39, 1)',\n\t\t'rgb(97, 39, 39, 1)'\n\t]\n\n\tgenerate_color() {\n\t\tvar o = Math.round, r = Math.random, s = 255;\n\t\treturn 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + 1 + ')';\n\t}\n\n\tcreate_dataset(ranks, player_name) {\n\t\tvar color;\n\t\tif (this.state.datasets.length < 8) {\n\t\t\tconsole.log(this.state.datasets.length)\n\t\t\tcolor = Graph.colors[this.state.datasets.length]\n\t\t\tconsole.log(color)\n\t\t}\n\t\telse{\n\t\t\tcolor = this.generate_color()\n\t\t}\n\t\treturn {\n\t\t\tlabel: player_name,\n\t\t\tfill: false,\n\t\t\tlineTension: 0.1,\n\t\t\tbackgroundColor: color,\n\t\t\tborderColor: color,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tpointBorderColor: color,\n\t\t\tpointBackgroundColor: '#fff',\n\t\t\tpointBorderWidth: 1,\n\t\t\tpointHoverRadius: 5,\n\t\t\tpointHoverBackgroundColor: color,\n\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\tpointHoverBorderWidth: 2,\n\t\t\tpointRadius: 1,\n\t\t\tpointHitRadius: 10,\n\t\t\tdata: ranks\n\t\t}\n\t}\n\n\tchangeAgeRange(start, end) {\n\n\t}\n\n\taddPlayer(player_id, player_name) {\n\n\t\tfetch(`/get_ranking_history?player_id=${player_id}&starting_age=25&ending_age=26`).then(response =>\n\t\t\tresponse.json().then(data => {\n\t\t\t\tvar ranks = data['data'].map(x => x['rank'])\n\t\t\t\tvar new_labels = data['data'].map(x => x['age'])\n\t\t\t\tif (new_labels.length < this.state.labels.length) {\n\t\t\t\t\tnew_labels = this.state.labels\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tlabels: new_labels,\n\t\t\t\t\tdatasets: [...this.state.datasets, this.create_dataset(ranks, player_name, player_id)]\n\t\t\t\t})\n\t\t\t}))\n\t}\n\n\trender() {\n\n\t\tconst datasets = this.state.datasets.map(x => x['data'])\n\n\t\tconst data = {\n\t\t\tlabels: this.state.labels,\n\t\t\tdatasets: datasets\n\t\t};\n\n\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Line data={data} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}