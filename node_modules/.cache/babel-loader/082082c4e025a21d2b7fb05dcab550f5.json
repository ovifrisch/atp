{"ast":null,"code":"var _jsxFileName = \"/Users/ovidiufritsch/code/tennis_atp/atp_frontend/src/components/AgeComparison/Graph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasets: [],\n      ranking_histories: []\n    };\n  }\n\n  addPlayer(player_id) {\n    fetch(\"/get_ranking_history?player_id=\".concat(player_id, \"&starting_age=25&ending_age=26\")).then(response => response.json().then(data => {\n      var new_entry = {\n        id: player_id,\n        data: data\n      };\n      var data = new_entry['data'];\n      var ranks = data.map(x => x['rank']);\n      console.log(data);\n      this.setState({\n        ranking_histories: [...this.state.ranking_histories, new_entry]\n      });\n    }));\n  }\n\n  render() {\n    var players = this.state.ranking_histories.map(x => {\n      return React.createElement(\"li\", {\n        key: x['id'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, x['id']);\n    });\n    const data = {\n      labels: [1.1, 2, 3, 4, 5, 6, 7],\n      datasets: [{\n        label: 'My First dataset',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }, {\n        label: 'My First dataset',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [21, 56, 89, 23, 56, 42, 28]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/Users/ovidiufritsch/code/tennis_atp/atp_frontend/src/components/AgeComparison/Graph.js"],"names":["React","Line","Graph","Component","constructor","props","state","datasets","ranking_histories","addPlayer","player_id","fetch","then","response","json","data","new_entry","id","ranks","map","x","console","log","setState","render","players","labels","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nclass Graph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdatasets: [],\n\t\t\tranking_histories: []\n\t\t}\n\t}\n\n\taddPlayer(player_id) {\n\n\t\tfetch(`/get_ranking_history?player_id=${player_id}&starting_age=25&ending_age=26`).then(response =>\n\t\t\tresponse.json().then(data => {\n\t\t\t\tvar new_entry = {id: player_id, data: data}\n\t\t\t\tvar data = new_entry['data']\n\t\t\t\tvar ranks = data.map(x => x['rank'])\n\t\t\t\tconsole.log(data)\n\t\t\t\tthis.setState({\n\t\t\t\t\tranking_histories: [...this.state.ranking_histories, new_entry]\n\t\t\t\t})\n\t\t\t}))\n\t}\n\n\trender() {\n\t\tvar players = this.state.ranking_histories.map(x => {\n\t\t\treturn <li key={x['id']}>{x['id']}</li>\n\t\t})\n\n\t\tconst data = {\n  labels: [1.1, 2, 3, 4, 5, 6, 7],\n  datasets: [\n    {\n\t\tlabel: 'My First dataset',\n\t\tfill: false,\n\t\tlineTension: 0.1,\n\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\tborderColor: 'rgba(75,192,192,1)',\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tpointBorderColor: 'rgba(75,192,192,1)',\n\t\tpointBackgroundColor: '#fff',\n\t\tpointBorderWidth: 1,\n\t\tpointHoverRadius: 5,\n\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\tpointHoverBorderWidth: 2,\n\t\tpointRadius: 1,\n\t\tpointHitRadius: 10,\n\t\tdata: [65, 59, 80, 81, 56, 55, 40]\n    },\n    {\n    \tlabel: 'My First dataset',\n\t\tfill: false,\n\t\tlineTension: 0.1,\n\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\tborderColor: 'rgba(75,192,192,1)',\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tpointBorderColor: 'rgba(75,192,192,1)',\n\t\tpointBackgroundColor: '#fff',\n\t\tpointBorderWidth: 1,\n\t\tpointHoverRadius: 5,\n\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\tpointHoverBorderWidth: 2,\n\t\tpointRadius: 1,\n\t\tpointHitRadius: 10,\n\t\tdata: [21, 56, 89, 23, 56, 42, 28]\n    }\n  ]\n};\n\n\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Line data={data} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}