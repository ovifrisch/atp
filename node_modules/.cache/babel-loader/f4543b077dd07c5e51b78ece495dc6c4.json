{"ast":null,"code":"var _jsxFileName = \"/Users/ovidiufritsch/code/tennis_atp/atp_frontend/src/components/AgeComparison/Graph.js\";\nimport React from 'react';\nimport ChartistGraph from 'react-chartist';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking_histories: []\n    };\n  }\n\n  addPlayer(player_id) {\n    fetch(\"/get_ranking_history?player_id=\".concat(player_id, \"&starting_age=25&ending_age=26\")).then(response => response.json().then(data => {\n      var new_entry = {\n        id: player_id,\n        data: data\n      };\n      this.setState({\n        ranking_histories: [...this.state.ranking_histories, new_entry]\n      });\n    }));\n  }\n\n  render() {\n    var players = this.state.ranking_histories.map(x => {\n      return React.createElement(\"li\", {\n        key: x['id'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, x['id']);\n    });\n    var simpleLineChartData = {\n      labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n      series: [[12, 9, 7, 8, 5], [2, 1, 3.5, 7, 3], [1, 3, 4, 5, 6]]\n    };\n    var lineChartOptions = {\n      low: 0,\n      showArea: true\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ChartistGraph, {\n      data: simpleLineChartData,\n      options: lineChartOptions,\n      type: 'Line',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/Users/ovidiufritsch/code/tennis_atp/atp_frontend/src/components/AgeComparison/Graph.js"],"names":["React","ChartistGraph","Graph","Component","constructor","props","state","ranking_histories","addPlayer","player_id","fetch","then","response","json","data","new_entry","id","setState","render","players","map","x","simpleLineChartData","labels","series","lineChartOptions","low","showArea"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAEZC,MAAAA,iBAAiB,EAAE;AAFP,KAAb;AAIA;;AAEDC,EAAAA,SAAS,CAACC,SAAD,EAAY;AAEpBC,IAAAA,KAAK,0CAAmCD,SAAnC,oCAAL,CAAmFE,IAAnF,CAAwFC,QAAQ,IAC/FA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC5B,UAAIC,SAAS,GAAG;AAACC,QAAAA,EAAE,EAAEP,SAAL;AAAgBK,QAAAA,IAAI,EAAEA;AAAtB,OAAhB;AACA,WAAKG,QAAL,CAAc;AACbV,QAAAA,iBAAiB,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,iBAAf,EAAkCQ,SAAlC;AADN,OAAd;AAGA,KALD,CADD;AAOA;;AAEDG,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAO,GAAG,KAAKb,KAAL,CAAWC,iBAAX,CAA6Ba,GAA7B,CAAiCC,CAAC,IAAI;AACnD,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAC,CAAC,IAAD,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBA,CAAC,CAAC,IAAD,CAApB,CAAP;AACA,KAFa,CAAd;AAIA,QAAIC,mBAAmB,GAAG;AACvBC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,CADe;AAEzBC,MAAAA,MAAM,EAAE,CACP,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ,EAAe,CAAf,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHO;AAFiB,KAA1B;AASA,QAAIC,gBAAgB,GAAG;AACtBC,MAAAA,GAAG,EAAE,CADiB;AAEtBC,MAAAA,QAAQ,EAAE;AAFY,KAAvB;AAKA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEL,mBAArB;AAA0C,MAAA,OAAO,EAAEG,gBAAnD;AAAqE,MAAA,IAAI,EAAE,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AA5CkC;;AA+CpC,eAAevB,KAAf","sourcesContent":["import React from 'react';\nimport ChartistGraph from 'react-chartist'\n\nclass Graph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\n\t\t\tranking_histories: []\n\t\t}\n\t}\n\n\taddPlayer(player_id) {\n\n\t\tfetch(`/get_ranking_history?player_id=${player_id}&starting_age=25&ending_age=26`).then(response =>\n\t\t\tresponse.json().then(data => {\n\t\t\t\tvar new_entry = {id: player_id, data: data}\n\t\t\t\tthis.setState({\n\t\t\t\t\tranking_histories: [...this.state.ranking_histories, new_entry]\n\t\t\t\t})\n\t\t\t}))\n\t}\n\n\trender() {\n\t\tvar players = this.state.ranking_histories.map(x => {\n\t\t\treturn <li key={x['id']}>{x['id']}</li>\n\t\t})\n\n\t\tvar simpleLineChartData = {\n  \t\t\tlabels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n\t\t\tseries: [\n\t\t\t\t[12, 9, 7, 8, 5],\n\t\t\t\t[2, 1, 3.5, 7, 3],\n\t\t\t\t[1, 3, 4, 5, 6]\n\t\t\t]\n\t\t}\n\n\t\tvar lineChartOptions = {\n\t\t\tlow: 0,\n\t\t\tshowArea: true\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ChartistGraph data={simpleLineChartData} options={lineChartOptions} type={'Line'} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}