{"version":3,"sources":["components/Header.js","GlobalConstants.js","components/MainPage/CurrentPlayers.js","components/MainPage/chart_helpers/chart_constants.js","components/MainPage/MatchesInfo.js","components/MainPage/chart_helpers/api_calls.js","components/MainPage/EventsInfo.js","components/MainPage/ChartConstants.js","components/MainPage/chart_helpers/create_dataset.js","components/MainPage/chart_helpers/segment_hover.js","components/MainPage/chart_helpers/options.js","components/MainPage/chart_helpers/fetch_by_age.js","components/MainPage/chart_helpers/fetch_by_date.js","components/MainPage/chart_helpers/color_generator.js","components/MainPage/chart_helpers/extended_line.js","components/MainPage/PlayerChart.js","components/MainPage/PlayerSelector.js","components/MainPage/DimensionSlider.js","components/MainPage/PlayerChartSwitch.js","components/MainPage/MainPage.js","components/Head2Head/Head2Head.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","Menu","Item","header","name","endpt_base","CurrentPlayers","props","state","players","color","image","this","map","x","includes","setState","data","filter","removed_player_handler","player","key","Button","className","style","backgroundColor","borderRadius","onClick","e","handle_button_click","Avatar","src","React","Component","weeks_in_year","round_mapper","F","SF","QF","R16","R32","R64","R128","RR","Video","href","url","target","thumbnail","dur","get_time","letter","end_idx","indexOf","start_idx","substring","hours","minutes","seconds","res","length","parseDuration","duration","PlayerRow","Grid","container","item","xs","nameClassName","spacing","parsedScores","set_score","scoreClassName","Match","parsed_scores","score","sets","split","winner_sets","loser_sets","set","replace","push","parseScore","match","video","TableRow","MatchesInfo","tourney_name","tourney_date","tourney_matches","loading","displaying","x_pos","y_pos","$","css","addClass","date","matches","content","match_boxes","Table","TableBody","Paper","onMouseLeave","mouseLeave","date_to_str","toString","promise","path","params","fetch","query_string","fullpath","Object","keys","join","then","response","json","db","get_dates","min","max","starting_date","ending_date","get_events","player_id","get_matches","event_id","tournament_name","get_rankings_by_age","p_id","start_age","end_age","starting_age","ending_age","get_rankings_by_date","start_date","end_date","get_top_ten","get_ten_filtered","prefix","EventsInfo","match_info","createRef","event_data","hover_x","hover_y","data_is_set","canvas_height","canvas_width","idx","y","current","prepare_box","position","left","top","a","setData","set_matches","el_id","me","one","event","initiate_match_display","removeClass","events","keep","empty_item","i","box_height","box_width","box_positions","set_box_positions","height","width","onMouseEnter","mouseEnter","upper_events","split_events","lower_events","override","wrap","ref","default_colors","create_dataset","ranks","dates","player_name","label","spanGaps","fill","lineTension","borderColor","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","display_event_data","event_box","set_event_data","data_idx","i1","i2","rgb","y_data","canvas","refs","init_box_position","position_box","parseInt","slice","left_date","right_date","set_events","handle_hover","chart","indices","x1","y1","x2","y2","x3","y3","nodes","getDatasetMeta","j","start_x","start_y","end_x","end_y","Math","abs","get_segment_intersection","highlight_data_idx","highlight_idx1","highlight_idx2","document","getElementById","setAttribute","highlight_segment","tick_callback","value","dimension","floor","val","mo","ceil","age_tick_callback","1","2","3","4","5","6","7","8","9","10","11","12","date_tick_callback","max_ticks","diff","get_yLabel","y_axis","get_xLabel","x_axis","get_options","console","log","scales","yAxes","scaleLabel","labelString","display","xAxes","ticks","maxTicksLimit","window_left_age","window_right_age","autoSkip","callback","index","values","tooltips","enabled","legend","stopPropagation","onHover","pad_data","ages","x_size","padded_ranks","Array","padded_dates","getYByAge","player_info","preserved_y_data","player_ids","player_names","player_colors","new_y_data","new_x_data","start","x_axis_data","get_x_axis_data","getAndSetData","concat","x_data","y_axis_data","padded_data","padded_y_axis","new_y","date_idx","getYByDate","get_color","available_colors","o","round","r","random","generate_color","extend_line","Chart","controllers","myLine","line","extend","draw","prototype","apply","arguments","meta","ctx","strokeStyle","substr","lineWidth","beginPath","point1","moveTo","point2","bezierCurveTo","stroke","PlayerChart","window_left_date","window_right_date","init_x_axis","new_available_colors","unshift","min_max","new_val","right","options","labels","datasets","type","PlayerSelector","player_images","placeholder","hovered_player","init_load","arr","d","text","hash","images","set_images","convert_data","getSetPlayers","setTopTen","setTopTenFiltered","player_image","added_player_handler","Dropdown","selectOnBlur","search","selection","onChange","_","label_click","onSearchChange","search_change","onOpen","open","DimensionSlider","slider_handler","new_date","PrettoSlider","withStyles","root","thumb","border","marginTop","marginLeft","boxShadow","active","valueLabel","track","rail","Slider","valueLabelDisplay","aria-label","defaultValue","onChangeCommitted","change_age","change_date","PlayerChartSwitch","checked","dimension_change_handler","Typography","component","alignItems","Switch","handleChange","MainPage","graph","dimension_slider","current_players","changeXDimension","player_color","addPlayer","removePlayer","change_dimension","pl_id","pl_name","pl_image","handle_added_player","handle_removed_player","dim","handle_dimension_change","handle_slider_change","Head2Head","App","exact","Boolean","window","location","hostname","dotenv","config","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3665608a.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react'\nimport './Header.css'\n\nfunction Header() {\n\treturn (\n\t\t<div id=\"the_header\">\n\t\t\t<Menu id = \"the_menu_item\">\n\t\t\t\t<Menu.Item header>ATP Visualizer</Menu.Item>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tname='XXX'\n\t\t\t\t\t// active={activeItem === 'aboutUs'}\n\t\t\t\t\t// onClick={this.handleItemClick}\n\t\t\t\t/>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tname='YYY'\n\t\t\t\t\t// active={activeItem === 'jobs'}\n\t\t\t\t\t// onClick={this.handleItemClick}\n\t\t\t\t/>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tname='ZZZ'\n\t\t\t\t\t// active={activeItem === 'locations'}\n\t\t\t\t\t// onClick={this.handleItemClick}\n\t\t\t\t/>\n\t\t\t</Menu>\n\t\t</div>\n\t)\n}\n\nexport default Header;","export var endpt_base = \"https://young-meadow-84276.herokuapp.com\"\n","import React from 'react';\nimport { Button } from 'semantic-ui-react'\nimport './styles/CurrentPlayers.css'\nimport Avatar from '@material-ui/core/Avatar';\nimport {endpt_base} from '../../GlobalConstants'\n\nclass CurrentPlayers extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplayers: []\n\t\t}\n\t}\n\n\taddPlayer(id, name, color, image) {\n\t\tif (this.state.players.map(x => x['id']).includes(id)) {\n\t\t\treturn\n\t\t}\n\t\tthis.setState({\n\t\t\tplayers: [...this.state.players, {id: id, name:name, color:color, image:image}]\n\t\t})\n\t}\n\n\thandle_button_click(data) {\n\t\tthis.setState({\n\t\t\tplayers: this.state.players.filter(x => x['id'] !== data['id'])\n\t\t})\n\t\tthis.props.removed_player_handler(data['id'])\n\t}\n\n\trender() {\n\t\tconst players = this.state.players.map((player) => {\n\t\t\treturn (\n\t\t\t\t<div id=\"the_current_player\" key={player['id']}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"player_button\"\n\t\t\t\t\t\tstyle={{backgroundColor: player['color'], borderRadius: 0}}\n\t\t\t\t\t\tid={player['id']}\n\t\t\t\t\t\tonClick={(e, data) => this.handle_button_click(data)}>{player['name']}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tid=\"the_player_circle\"\n\t\t\t\t\t\tsrc={endpt_base + \"/\" + player['image']}\n\t\t\t\t\t/>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div id=\"the_current_players\">\n\t\t\t\t{players}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default CurrentPlayers;","\n\nexport const weeks_in_year = 48;\n\nexport const round_mapper = {\n\tF: 'Final',\n\tSF: 'Semi-final',\n\tQF: 'Quarter-final',\n\tR16: 'Round of 16',\n\tR32: 'Round of 32',\n\tR64: 'Round of 64',\n\tR128: 'Round of 128',\n\tRR: 'Round Robin'\n}","import React from 'react';\nimport './styles/MatchesInfo.css'\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport {round_mapper} from './chart_helpers/chart_constants'\nimport {RingLoader} from 'react-spinners';\nimport $ from \"jquery\";\n\nconst Video = (props) => {\n\n\tconst parseDuration = (dur) => {\n\n\t\tif (dur == null) {\n\t\t\treturn dur\n\t\t}\n\n\t\tconst get_time = (dur, letter) => {\n\t\t\tvar end_idx = dur.indexOf(letter)\n\t\t\tif (end_idx == -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar start_idx = end_idx - 1\n\t\t\twhile (dur[start_idx] >= '0' && dur[start_idx] <= '9') {\n\t\t\t\tstart_idx -= 1\n\t\t\t}\n\t\t\tstart_idx += 1\n\t\t\treturn dur.substring(start_idx, end_idx)\n\t\t}\n\t\t// PT18M18S\n\t\tvar hours = get_time(dur, \"H\")\n\t\tvar minutes = get_time(dur, \"M\")\n\t\tvar seconds = get_time(dur, \"S\")\n\t\tvar res = \"\"\n\t\tif (hours != null) {\n\t\t\tres += hours + \":\"\n\t\t}\n\t\tif (minutes != null) {\n\t\t\tres += minutes + \":\"\n\t\t}\n\t\tif (seconds != null) {\n\t\t\tif (seconds.length == 1) {\n\t\t\t\tres += \"0\"\n\t\t\t}\n\t\t\tres += seconds\n\t\t}\n\t\treturn res\n\t}\n\n\treturn (\n\t\t<a href={props.url} target=\"_blank\">\n\t\t\t<div className=\"video_container\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"video_image\"\n\t\t\t\t\tsrc={props.thumbnail}\n\t\t\t\t/>\n\t\t\t\t<div className=\"video_duration\">\n\t\t\t\t\t► {parseDuration(props.duration)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</a>\n\t)\n}\n\nconst PlayerRow = (props) => {\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={8}>\n\t\t\t\t<p className={props.nameClassName}>\n\t\t\t\t\t{props.name}\n\t\t\t\t</p>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t{\n\t\t\t\t\t\tprops.parsedScores.map(set_score => (\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<p className={props.scoreClassName}>\n\t\t\t\t\t\t\t\t\t{set_score}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n\n\nconst Match = (props) => {\n\n\tconst parseScore = (score) => {\n\t\tvar sets = score.split(\" \")\n\t\tvar winner_sets = []\n\t\tvar loser_sets = []\n\t\tfor (var set of sets) {\n\t\t\tset = set.replace(/\\(.*\\)/, \"\") // remove the tiebreak parenthesis\n\t\t\tvar x = set.split(\"-\")\n\t\t\twinner_sets.push(x[0])\n\t\t\tloser_sets.push(x[1])\n\t\t}\n\t\treturn [winner_sets, loser_sets]\n\t}\n\n\tvar parsed_scores = parseScore(props.match['score'])\n\n\tvar video = null;\n\tif (props.match['video_url'] !== null) {\n\t\tvideo = (\n\t\t\t<Video\n\t\t\t\turl={\"http://\" + props.match['video_url']}\n\t\t\t\tthumbnail={props.match['video_thumbnail']}\n\t\t\t\tduration={props.match['video_duration']}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<TableRow key={props.match['id']} className=\"the_match_row\">\n\t\t\t<Grid container>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{round_mapper[props.match['round']]}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t<PlayerRow\n\t\t\t\t\t\tnameClassName=\"winner_name\"\n\t\t\t\t\t\tscoreClassName=\"winner_score\"\n\t\t\t\t\t\tname={props.match['winner']['first_name'][0] + \". \" + props.match['winner']['last_name']}\n\t\t\t\t\t\tparsedScores={parsed_scores[0]}\n\t\t\t\t\t/>\n\t\t\t\t\t<PlayerRow\n\t\t\t\t\t\tnameClassName=\"loser_name\"\n\t\t\t\t\t\tscoreClassName=\"loser_score\"\n\t\t\t\t\t\tname={props.match['loser']['first_name'][0] + \". \" + props.match['loser']['last_name']}\n\t\t\t\t\t\tparsedScores={parsed_scores[1]}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{video}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</TableRow>\n\t)\n}\n\nclass MatchesInfo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttourney_name: null,\n\t\t\ttourney_date: null,\n\t\t\ttourney_matches: [],\n\t\t\tloading: true,\n\t\t\tcolor: 'red',\n\t\t\tdisplaying: false\n\t\t}\n\t}\n\n\tprepare_box(color, x_pos, y_pos) {\n\t\t$(\"#the_matches_paper\").css(\"left\", x_pos - 170)\n\t\t$(\"#the_matches_paper\").css(\"top\", y_pos - 100)\n\t\t$(\"#the_matches_paper\").css(\"display\", \"block\")\n\t\t$(\"#the_matches_paper\").css(\"border\", `5px solid ${color}`)\n\t\t$(\"#the_matches_paper\").addClass(\"scale_transform\")\n\t\tthis.setState({\n\t\t\tcolor: color,\n\t\t\tdisplaying: true\n\t\t})\n\t}\n\n\tsetData(name, date, matches) {\n\t\tthis.setState({\n\t\t\ttourney_name: name,\n\t\t\ttourney_date: date, \n\t\t\ttourney_matches: matches,\n\t\t\tloading: false\n\t\t})\n\t}\n\n\tcomponentDidUpdate() {\n\t\t$(\"#the_matches_paper\").css(\"height\", \"auto\")\n\t}\n\n\tmouseLeave() {\n\t\t$(\"#the_matches_paper\").css(\"display\", \"none\")\n\t\tthis.setState({\n\t\t\tdisplaying: false\n\t\t})\n\t}\n\n\trender() {\n\n\t\tvar content;\n\n\t\tconst loader_style = `\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 auto;\n\t\t\ttop: 65px;\n\t\t`;\n\n\t\tif (this.state.loading) {\n\t\t\tcontent = (\n\t\t\t\t<RingLoader\n\t\t\t\t\tcss={loader_style}\n\t\t\t\t\tcolor={this.state.color}\n\t\t\t\t/>\n\t\t\t)\n\t\t} else {\n\n\t\t\tvar match_boxes = this.state.tourney_matches.map(match => (\n\t\t\t\t<Match\n\t\t\t\t\tmatch={match}\n\t\t\t\t/>\n\t\t\t))\n\n\t\t\tcontent = (\n\t\t\t\t<Table>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t<TableRow className=\"tourny_header\">\n\t\t\t\t\t\t\t{this.state.tourney_name}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t{match_boxes}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<Paper id=\"the_matches_paper\" onMouseLeave = {() => this.mouseLeave()}>\n\t\t\t\t{content}\n\t\t\t</Paper>\n\t\t)\n\t}\n}\n\n\n\n\nexport default MatchesInfo;","import {endpt_base} from '../../../GlobalConstants'\n\nfunction date_to_str(date) {\n\tvar mo;\n\tvar day;\n\tvar yr = date['yr']\n\tif (date['mo'] < 10) {\n\t\tmo = \"0\" + date['mo'].toString()\n\t} else{\n\t\tmo = date['mo'].toString()\n\t}\n\tif (date['day'] < 10){\n\t\tday = \"0\" + date['day'].toString()\n\t} else {\n\t\tday = date['day'].toString()\n\t}\n\tvar res = yr + mo + day\n\treturn res\n}\n\nfunction query_string(params) {\n\treturn Object.keys(params).map((key) => key + \"=\" + params[key]).join(\"&\")\n}\n\nfunction fullpath(path, query_string) {\n\treturn endpt_base + path + \"?\" + query_string\n}\n\nfunction promise(path, params) {\n\treturn fetch(fullpath(path, query_string(params))).then(\n\t\tresponse => response.json().then(\n\t\t\tdata => {\n\t\t\t\treturn data\n\t\t\t}\n\t\t)\n\t)\n}\n\nvar db = {\n\n\t// get the ranking dates in asc order between these two dates\n\tget_dates: (min, max) => {\n\t\tvar path = \"/get_ranking_dates_between\"\n\t\tvar params = {\n\t\t\tstarting_date: min,\n\t\t\tending_date: max\n\t\t}\n\t\treturn promise(path, params)\n\t},\n\n\tget_events: (player_id, starting_date, ending_date) => {\n\t\tstarting_date = date_to_str(starting_date)\n\t\tending_date = date_to_str(ending_date)\n\n\t\tvar path = \"/events\"\n\t\tvar params = {\n\t\t\tplayer_id: player_id,\n\t\t\tstarting_date: starting_date,\n\t\t\tending_date, ending_date\n\t\t}\n\n\t\treturn promise(path, params)\n\t},\n\n\tget_matches: (player_id, event_id, tournament_name) => {\n\t\tvar path = \"/matches\"\n\t\tvar params = {\n\t\t\tplayer_id: player_id,\n\t\t\tevent_id: event_id,\n\t\t\ttournament_name: tournament_name\n\t\t}\n\t\treturn promise(path, params)\n\t},\n\n\tget_rankings_by_age: (p_id, start_age, end_age) => {\n\t\tvar path = \"/get_ranking_history\"\n\t\tvar params = {\n\t\t\tplayer_id: p_id,\n\t\t\tstarting_age: start_age,\n\t\t\tending_age: end_age\n\t\t}\n\t\treturn promise(path, params)\n\t},\n\n\tget_rankings_by_date: (p_id, start_date, end_date) => {\n\t\tvar path = \"/get_ranking_history_date\"\n\t\tvar params = {\n\t\t\tplayer_id: p_id,\n\t\t\tstarting_date: start_date,\n\t\t\tending_date: end_date\n\t\t}\n\t\treturn promise(path, params)\n\t},\n\n\tget_top_ten: () => {\n\t\tvar path = \"/topTenPlayers\"\n\t\treturn promise(path, {})\n\t},\n\n\tget_ten_filtered: (filter) => {\n\t\tvar path = \"/topTenFiltered\"\n\t\tvar params = {\n\t\t\tprefix: filter\n\t\t}\n\t\treturn promise(path, params)\n\t}\n}\n\n\nexport default db;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport {endpt_base} from '../../GlobalConstants'\n// import { AutoSizer, Column, Table } from 'react-virtualized';\nimport './styles/EventsInfo.css'\nimport { css } from '@emotion/core';\nimport {RingLoader} from 'react-spinners';\nimport MatchesInfo from './MatchesInfo'\nimport db from './chart_helpers/api_calls'\nimport $ from \"jquery\";\n\n\nclass EventsInfo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.match_info = React.createRef()\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\tevent_data: [],\n\t\t\tplayer_id: null,\n\t\t\tcolor: 'red',\n\t\t\thover_x: 0,\n\t\t\thover_y: 0,\n\t\t\tdata_is_set: false, // needed in componentDidUpdate\n\t\t\tcanvas_height: 0,\n\t\t\tcanvas_width: 0,\n\t\t\tdisplaying: false\n\t\t}\n\t}\n\n\t/*\n\tCalled from segment_hover.js after JSON response has been received\n\n\t\n\t*/\n\tset_event_data(data, player_id) {\n\t\tthis.setState({\n\t\t\tevent_data: data,\n\t\t\tplayer_id: player_id,\n\t\t\tdata_is_set: true,\n\t\t\tloading: false\n\t\t})\n\t}\n\n\tprepare_box(color, x_pos, y_pos, hover_x, hover_y, canvas_height, canvas_width) {\n\t\t$(\"#the_tourney_paper\").css(\"display\", \"block\")\n\t\t$(\"#the_tourney_paper\").css(\"left\", x_pos)\n\t\t$(\"#the_tourney_paper\").css(\"top\", y_pos)\n\t\t$(\"#the_tourney_paper\").css(\"border\", `5px solid ${color}`)\n\t\t$(\"#the_tourney_paper\").addClass(\"scale_transform\")\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\tcolor: color,\n\t\t\thover_x: hover_x,\n\t\t\thover_y: hover_y,\n\t\t\tdata_is_set: false,\n\t\t\tcanvas_height: canvas_height,\n\t\t\tcanvas_width: canvas_width\n\t\t})\n\t}\n\n\tinitiate_match_display(idx, x, y) {\n\t\tthis.match_info.current.prepare_box(\n\t\t\tthis.state.color,\n\t\t\tx + $(\"#the_tourney_paper\").position().left,\n\t\t\ty + $(\"#the_tourney_paper\").position().top\n\t\t)\n\t\tconst set_matches = async() => {\n\t\t\tvar event_id = this.state.event_data[idx]['event_id']\n\t\t\tvar name = this.state.event_data[idx]['name']\n\t\t\tvar date = this.state.event_data[idx]['date']\n\t\t\tvar data = await db.get_matches(this.state.player_id, event_id, name)\n\t\t\tthis.match_info.current.setData(\n\t\t\t\tname,\n\t\t\t\tdate,\n\t\t\t\tdata\n\t\t\t)\n\t\t}\n\t\tset_matches()\n\t}\n\n\tmouseEnter(idx, e) {\n\t\tif (this.match_info.current.state.displaying) {\n\t\t\treturn\n\t\t}\n\t\tvar x = e['nativeEvent']['layerX']\n\t\tvar y = e['nativeEvent']['layerY']\n\t\tvar el_id = `#the_circle_${this.state.event_data[idx]['event_id']}`\n\t\t$(el_id).addClass(\"blink_animate\")\n\t\tvar me = this\n\t\t$(el_id).one(\n\t\t\t\"animationend\",\n\t\t\tfunction(event) {\n\t\t\t\tme.initiate_match_display(idx, x, y)\n\t\t\t}\n\t\t)\n\t}\n\n\tmouseLeave(idx, e) {\n\t\tvar el_id = `#the_circle_${this.state.event_data[idx]['event_id']}`\n\t\t$(el_id).removeClass(\"blink_animate\")\n\t}\n\n\tsplit_events(events, keep, empty_item) {\n\t\tvar res = []\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tif (i % 2 == keep) {\n\t\t\t\tres.push(events[i])\n\t\t\t} else {\n\t\t\t\tres.push(empty_item)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tset_box_positions(box_height, box_width) {\n\t\tvar x_pos = this.state.hover_x - (box_width / 2)\n\t\tvar y_pos = this.state.hover_y - (box_height / 2)\n\n\t\tif (x_pos < 0) {\n\t\t\tx_pos = 0\n\t\t} else if (x_pos + box_width > this.state.canvas_width) {\n\t\t\tx_pos = this.state.canvas_width - box_width\n\t\t}\n\n\t\tif (y_pos < 0) {\n\t\t\ty_pos = 0\n\t\t} else if (y_pos + box_height > this.state.canvas_height) {\n\t\t\ty_pos = this.state.canvas_height - box_height\n\t\t}\n\t\treturn [x_pos, y_pos]\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.data_is_set) {\n\t\t\t$(\"#the_tourney_paper\").css(\"width\", \"auto\")\n\t\t\t$(\"#the_tourney_paper\").css(\"height\", \"auto\")\n\t\t\tvar box_positions = this.set_box_positions(\n\t\t\t\t$(\"#the_tourney_paper\").height(),\n\t\t\t\t$(\"#the_tourney_paper\").width()\n\t\t\t)\n\t\t\t$(\"#the_tourney_paper\").css(\"left\", box_positions[0])\n\t\t\t$(\"#the_tourney_paper\").css(\"top\", box_positions[1])\n\t\t\tthis.setState({\n\t\t\t\tdata_is_set: false\n\t\t\t})\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\tconst empty_item = (\n\t\t\t<Grid item className=\"empty_item\">\n\t\t\t</Grid>\n\t\t)\n\n\t\tconst events = this.state.event_data.map((event, idx) => (\n\t\t\t<Grid item>\n\t\t\t\t<Avatar\n\t\t\t\t\tclassName=\"the_circle\"\n\t\t\t\t\tsrc={endpt_base + \"/\" + event['image']}\n\t\t\t\t\tonMouseEnter = {(e) => this.mouseEnter(idx, e)}\n\t\t\t\t\tonMouseLeave = {(e) => this.mouseLeave(idx, e)}\n\t\t\t\t\tkey={event['event_id']}\n\t\t\t\t\tid={\"the_circle_\" + event['event_id']}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t))\n\n\t\tconst upper_events = this.split_events(events, 0, empty_item)\n\t\tconst lower_events = this.split_events(events, 1, empty_item)\n\n\t\tconst override = css`\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 auto;\n\t\t\ttop: 65px;\n\t\t`;\n\n\t\tvar content;\n\t\tif (this.state.loading == true) {\n\t\t\tcontent = (\n\t\t\t\t<RingLoader\n\t\t\t\t\tcss={override}\n\t\t\t\t\tcolor={this.state.color}\n\t\t\t\t/>\n\t\t\t)\n\t\t} else {\n\t\t\tcontent = (\n\t\t\t\t<div>\n\t\t\t\t\t<Grid container wrap='nowrap'>\n\t\t\t\t\t\t{upper_events}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container wrap='nowrap'>\n\t\t\t\t\t\t{lower_events}\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper id= \"the_tourney_paper\">\n\t\t\t\t\t{content}\n\t\t\t\t</Paper>\n\t\t\t\t<MatchesInfo ref={this.match_info}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n/*\n\t\t\t\t\n*/\n\nexport default EventsInfo;\n\n","\n\nexport var default_colors =\n[\n\t\"rgb(76, 128, 24, 1)\",\n\t'rgb(24, 76, 128, 1)',\n\t'rgb(128, 24, 128, 1)',\n\t'rgb(216, 12, 12, 1)',\n\t'rgb(225, 122, 19, 1)',\n\t'rgb(19, 225, 225, 1)',\n\t'rgb(68, 97, 39, 1)',\n\t'rgb(97, 39, 39, 1)'\n]","function create_dataset(ranks, dates, player_name, player_id, color) {\n\tvar res =\n\t{\n\t\tdata: {\n\t\t\tlabel: player_name,\n\t\t\tspanGaps: true,\n\t\t\tfill: false,\n\t\t\tlineTension: 0.1,\n\t\t\tbackgroundColor: color,\n\t\t\tborderColor: color,\n\t\t\tborderWidth: 3,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tpointBorderColor: color,\n\t\t\tpointBackgroundColor: '#fff',\n\t\t\tpointBorderWidth: 4,\n\t\t\tpointHoverRadius: 7,\n\t\t\tpointHoverBackgroundColor: color,\n\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\tpointHoverBorderWidth: 1,\n\t\t\tpointRadius: 1,\n\t\t\tpointHitRadius: 1,\n\t\t\tdata: ranks,\n\t\t},\n\t\tdates: dates,\n\t\tplayer_id: player_id\n\t}\n\treturn res\n}\n\nexport default create_dataset;","import db from './api_calls'\n\nfunction collinear(x1, y1, x2, y2, x3, y3) {\n\treturn Math.abs(((y1 - y2) * (x1 - x3)) - ((y1 - y3) * (x1 - x2)))\n}\n\nfunction display_event_data(me, data, player_id) {\n\tme.event_box.current.set_event_data(data, player_id)\n}\n\nfunction position_box(me, x, y, height, width) {\n\t// position the box based on the quadrant of the hover point\n\t// relative to the chart\n\t\n\t//CHANGE DIMS HERE IF YOU CHANGE BOX WIDTH OR HEIGHT\n\tvar box_height = 300\n\tvar box_width = 500\n\tvar x_pos = x - 100\n\tvar y_pos = y - 100\n\t// the x_pos can't be less than 0\n\t// the x_pos + 200 can't be greater than canvas width\n\t// the y_pos can't be less than 0\n\t// the y_pos + 200 can't be greater than the canvas height\n\tif (x_pos < 0) {\n\t\tx_pos = 0\n\t} else if (x_pos + 200 > width) {\n\t\tx_pos = width - 200\n\t}\n\n\tif (y_pos < 0) {\n\t\ty_pos = 0\n\t} else if (y_pos + 200 > height) {\n\t\ty_pos = height - 200\n\t}\n\treturn [x_pos, y_pos]\n}\n\nfunction rgb2hex(rgb){\n\trgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\treturn (rgb && rgb.length === 4) ? \"#\" +\n\t(\"0\" + parseInt(rgb[1],10).toString(16)).slice(-2) +\n\t(\"0\" + parseInt(rgb[2],10).toString(16)).slice(-2) +\n\t(\"0\" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\n}\n\nfunction get_events(me, data_idx, i1, i2, x, y) {\n\tvar color = me.state.y_data[data_idx]['data']['borderColor']\n\tvar canvas = me.refs['graph']['chartInstance']['canvas']\n\tvar height = canvas['clientHeight']\n\tvar width = canvas['clientWidth']\n\n\tvar init_box_position = position_box(me, x, y, height, width)\n\tme.event_box.current.prepare_box(rgb2hex(color), init_box_position[0], init_box_position[1], x, y, height, width)\n\tvar player_id = me.state.y_data[data_idx]['player_id']\n\tvar left_date = me.state.y_data[data_idx]['dates'][i1]\n\tvar right_date = me.state.y_data[data_idx]['dates'][i2]\n\n\tconst set_events = async() => {\n\t\tvar data = await db.get_events(player_id, left_date, right_date)\n\t\tdisplay_event_data(me, data, player_id)\n\t}\n\tset_events()\n}\n\nfunction highlight_segment(me, data_idx, i1, i2) {\n\tme.setState({\n\t\thighlight_data_idx: data_idx,\n\t\thighlight_idx1: i1,\n\t\thighlight_idx2: i2\n\t})\n}\n\n// \n\t// such that these x and y coordinates are collinear with those\n\t/*\n\tfind (if any) the two consecutive data points in any of the datasets\n\tsuch that these x and y coordinates are collinear with those point\n\tAND x lies beteen p1.x and p2.x.\n\tif none, return null\n\t*/\nfunction get_segment_intersection(me, chart, x, y) {\n\tvar e1 = 1 // slack for x\n\tvar e2 = 300 // slack for collineariy measure\n\tfor (var i = 0; i < me.state.y_data.length; i++) {\n\t\tvar nodes = chart.getDatasetMeta(i)['data']\n\t\tnodes = nodes.filter(x => x['_model']['skip'] == false)\n\t\tfor (var j = 0; j < nodes.length - 1; j++) {\n\t\t\tvar start_x = nodes[j]['_model']['x']\n\t\t\tvar start_y = nodes[j]['_model']['y']\n\t\t\tvar end_x = nodes[j + 1]['_model']['x']\n\t\t\tvar end_y = nodes[j + 1]['_model']['y']\n\t\t\tif (x < (start_x - e1) || x > (end_x + e1)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tvar collinearity = collinear(x, y, start_x, start_y, end_x, end_y)\n\t\t\tif (collinearity < e2) {\n\t\t\t\treturn {'data_idx': nodes[j]['_datasetIndex'], 'i1':nodes[j]['_index'], 'i2':nodes[j+1]['_index']}\n\t\t\t}\n\t\t}\n\t}\n\treturn null\n}\n\n// called whenever the user hovers any part of the chart\nfunction handle_hover(me, e, data) {\n\tvar chart = me.refs['graph']['chartInstance']\n\tvar x_pos = e['layerX']\n\tvar y_pos = e['layerY']\n\n\tvar indices = get_segment_intersection(me, chart, x_pos, y_pos)\n\n\t// not hovering a segment\n\tif (indices === null) {\n\n\t\t// was previously hovering a segment\n\t\tif (me.state.highlight_data_idx !== -1) {\n\t\t\tme.setState({\n\t\t\t\thighlight_data_idx: -1,\n\t\t\t\thighlight_idx1: 0,\n\t\t\t\thighlight_idx2: 0\n\t\t\t})\n\t\t\tdocument.getElementById(\"the_tourney_paper\").setAttribute(\"style\", \"display:none\")\n\t\t\tdocument.getElementById(\"the_matches_paper\").setAttribute(\"style\", \"display:none\")\n\t\t}\n\t\treturn\n\n\t// hovering a segment, was previously hovering it\n\t} else if (me.state.highlight_data_idx !== -1) {\n\t\t// same highlight segment\n\t\tif (indices['i1'] == me.state.highlight_idx1 && indices['i2'] == me.state.highlight_idx2) {\n\t\t\treturn\n\t\t} else {\n\t\t\tdocument.getElementById(\"the_tourney_paper\").setAttribute(\"style\", \"display:none\")\n\t\t\tdocument.getElementById(\"the_matches_paper\").setAttribute(\"style\", \"display:none\")\n\t\t}\n\t}\n\n\t// hovering a segment, just started hovering it\n\thighlight_segment(me, indices['data_idx'], indices['i1'], indices['i2'])\n\tget_events(me, indices['data_idx'], indices['i1'], indices['i2'], x_pos, y_pos)\n}\n\n\nexport default handle_hover;\n\n\n","import handle_hover from './segment_hover'\n\nfunction age_tick_callback(value, start_age, end_age) {\n\n\tvar get_month = (val) => {\n\t\tval = val - Math.floor(val)\n\t\treturn Math.ceil(12 * val)\n\t}\n\tvar diff = end_age - start_age\n\tif (diff > 5) {\n\t\treturn Math.floor(value).toString()\n\t} else {\n\t\tvar mo = get_month(value)\n\t\tif (mo == 0) {\n\t\t\treturn Math.floor(value).toString()\n\t\t} else {\n\t\t\treturn Math.floor(value).toString() + \".\" + mo.toString()\n\t\t}\n\t}\n}\n\nfunction tick_callback(value, dimension, start_age, end_age) {\n\tif (dimension == \"age\") {\n\t\treturn age_tick_callback(value, start_age, end_age)\n\t} else {\n\t\treturn date_tick_callback(value)\n\t}\n}\n\nfunction date_tick_callback(value) {\n\tvar months = {1: 'Jan', 2: 'Feb', 3: 'Mar', 4:'Apr', 5:'May', 6: 'Jun', 7: 'Jul', \n\t\t\t\t8: 'Aug', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dec'}\n\treturn months[value['mo']] + \" \" + value['yr']\n}\n\nfunction max_ticks(start_age, end_age) {\n\tvar diff = end_age - start_age\n\tif (diff > 5) {\n\t\treturn Math.floor(diff)\n\t} else {\n\t\treturn 10\n\t}\n}\n\nfunction get_yLabel(me) {\n\tif (me.state.y_axis == 'rank') {\n\t\treturn \"Ranking\"\n\t}\n}\n\nfunction get_xLabel(me) {\n\tif (me.state.x_axis == 'date') {\n\t\treturn \"Date\"\n\t} else if (me.state.x_axis == 'age') {\n\t\treturn \"Age\"\n\t}\n}\n\nfunction get_options(me) {\n\tconsole.log(me)\n\tvar options = {\n\t\tscales: {\n\t\t\tyAxes: [{\n\t\t\t\tscaleLabel: {\n\t\t\t\t\tlabelString: get_yLabel(me),\n\t\t\t\t\tdisplay: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\txAxes: [{\n\t\t\t\tscaleLabel: {\n\t\t\t\t\tlabelString: get_xLabel(me),\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\tmaxTicksLimit: max_ticks(me.state.window_left_age, me.state.window_right_age),\n\t\t\t\t\tautoSkip: true,\n\t\t\t\t\tcallback: (value, index, values) => tick_callback(value, me.state.x_axis, me.state.window_left_age, me.state.window_right_age)\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tenabled: false\n\t\t},\n\n\t\tlegend: {\n\t\t\tonClick: (e) => e.stopPropagation(),\n\t\t\tdisplay: false\n\t\t},\n\n\t\tonHover: (event, data) => handle_hover(me, event, data)\n\t}\n\treturn options\n}\n\nexport default get_options;","import {weeks_in_year} from './chart_constants'\nimport create_dataset from './create_dataset'\nimport db from './api_calls'\n\nfunction pad_data(ranks, dates, ages, start_age, end_age, x_size) {\n\tvar padded_ranks = Array(x_size).fill(null)\n\tvar padded_dates = Array(x_size).fill(null)\n\tfor (let i = 0; i < ages.length; i++) {\n\t\tif (ages[i] < start_age || ages[i] > end_age) {\n\t\t\tcontinue; // should never happen\n\t\t}\n\t\tvar idx = Math.floor((ages[i] - start_age) / (1/(2*weeks_in_year)))\n\t\tpadded_ranks[idx] = ranks[i]\n\t\tpadded_dates[idx] = dates[i]\n\t}\n\treturn [padded_ranks, padded_dates]\n}\n\nfunction get_x_axis_data(start_age, end_age) {\n\tif (start_age >= end_age) {\n\t\treturn []\n\t}\n\tvar start = start_age + (1/96)\n\tvar x_axis_data = []\n\twhile (start <= end_age) {\n\t\tx_axis_data.push(start)\n\t\tstart = start + (1/96)\n\t}\n\treturn x_axis_data\n}\n\nfunction getYByAge(me, start_age, end_age, y_axis, player_info, preserved_y_data) {\n\tvar player_ids = player_info['player_ids']\n\tvar player_names = player_info['player_names']\n\tvar player_colors = player_info['player_colors']\n\n\tvar new_y_data = []\n\tvar new_x_data = get_x_axis_data(start_age, end_age)\n\n\tconst getAndSetData = async(idx) => {\n\t\t// console.log(new_x_data)\n\t\t// console.log([...preserved_y_data, new_y_data])\n\t\tif (idx >= player_ids.length) {\n\t\t\tme.setState({\n\t\t\t\ty_data: preserved_y_data.concat(new_y_data),\n\t\t\t\tx_data: new_x_data,\n\t\t\t\tx_axis: 'age'\n\t\t\t})\n\t\t} else {\n\t\t\tvar data;\n\t\t\tif (y_axis == 'rank') {\n\t\t\t\tdata = await db.get_rankings_by_age(player_ids[idx], start_age, end_age)\n\t\t\t}\n\t\t\tvar y_axis_data = data.map(x => x[y_axis])\n\t\t\tvar dates = data.map(x => x['date'])\n\t\t\tvar ages = data.map(x => x['age'])\n\t\t\tvar padded_data = pad_data(\n\t\t\t\ty_axis_data,\n\t\t\t\tdates,\n\t\t\t\tages,\n\t\t\t\tstart_age,\n\t\t\t\tend_age,\n\t\t\t\tme.state.x_data.length\n\t\t\t)\n\t\t\tvar padded_y_axis = padded_data[0]\n\t\t\tvar padded_dates = padded_data[1]\n\t\t\tvar new_y = create_dataset(\n\t\t\t\tpadded_y_axis,\n\t\t\t\tpadded_dates,\n\t\t\t\tplayer_names[idx],\n\t\t\t\tplayer_ids[idx],\n\t\t\t\tplayer_colors[idx]\n\t\t\t)\n\t\t\tnew_y_data.push(new_y)\n\t\t\tgetAndSetData(idx + 1)\n\t\t}\n\t}\n\n\tgetAndSetData(0)\n}\n\n\nexport default getYByAge;\n\n","import create_dataset from './create_dataset'\nimport db from './api_calls'\n\nfunction get_x_axis_data(start_age, end_age) {\n\tif (start_age >= end_age) {\n\t\treturn []\n\t}\n\tvar start = start_age + (1/96)\n\tvar x_axis_data = []\n\twhile (start <= end_age) {\n\t\tx_axis_data.push(start)\n\t\tstart = start + (1/96)\n\t}\n\treturn x_axis_data\n}\n\nfunction pad_data(ranks, dates, x_data) {\n\tvar padded_ranks = Array(x_data.length).fill(null)\n\tvar padded_dates = Array(x_data.length).fill(null)\n\tvar date_idx = 0\n\tfor (var i = 0; i < x_data.length; i++) {\n\t\tif (date_idx >= dates.length) {\n\t\t\treturn [padded_ranks, padded_dates]\n\t\t} else if (dates[date_idx]['yr'] == x_data[i]['yr']\n\t\t\t&& dates[date_idx]['mo'] == x_data[i]['mo']\n\t\t\t&& dates[date_idx]['day'] == x_data[i]['day']) {\n\t\t\tpadded_ranks[i] = ranks[date_idx]\n\t\t\tpadded_dates[i] = dates[date_idx]\n\t\t\tdate_idx += 1\n\t\t}\n\t}\n\treturn [padded_ranks, padded_dates]\n}\n\nfunction getYByDate(me, start_date, end_date, y_axis, player_info, preserved_y_data) {\n\tvar player_ids = player_info['player_ids']\n\tvar player_names = player_info['player_names']\n\tvar player_colors = player_info['player_colors']\n\n\tvar new_y_data = []\n\tvar new_x_data;\n\n\tconst getAndSetData = async(idx) => {\n\t\tif (idx >= player_ids.length) {\n\t\t\tme.setState({\n\t\t\t\ty_data: preserved_y_data.concat(new_y_data),\n\t\t\t\tx_data: new_x_data,\n\t\t\t\tx_axis: 'date'\n\t\t\t})\n\t\t\treturn\n\t\t} else if (idx == -1) {\n\t\t\tnew_x_data = await db.get_dates(start_date, end_date)\n\t\t} else {\n\t\t\tvar data;\n\t\t\tif (y_axis == 'rank') {\n\t\t\t\tdata = await db.get_rankings_by_date(player_ids[idx], start_date, end_date)\n\t\t\t\tvar ranks = data.map(x => x['rank'])\n\t\t\t\tvar dates = data.map(x => x['date'])\n\t\t\t\tvar padded_data = pad_data(\n\t\t\t\t\tranks,\n\t\t\t\t\tdates,\n\t\t\t\t\tnew_x_data\n\t\t\t\t)\n\t\t\t\tvar padded_y_axis = padded_data[0]\n\t\t\t\tvar padded_dates = padded_data[1]\n\t\t\t\tvar new_y = create_dataset(\n\t\t\t\t\tpadded_y_axis,\n\t\t\t\t\tpadded_dates,\n\t\t\t\t\tplayer_names[idx],\n\t\t\t\t\tplayer_ids[idx],\n\t\t\t\t\tplayer_colors[idx]\n\t\t\t\t)\n\t\t\t\tnew_y_data.push(new_y)\n\t\t\t}\n\t\t}\n\t\tgetAndSetData(idx + 1)\n\t}\n\n\tgetAndSetData(-1)\n}\n\n\nexport default getYByDate;\n","\nfunction generate_color() {\n\tvar o = Math.round, r = Math.random, s = 255;\n\treturn 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + 1 + ')';\n}\n\nfunction get_color(me) {\n\tvar color;\n\tif (me.state.available_colors.length == 0) {\n\t\treturn generate_color()\n\t}\n\treturn me.state.available_colors[0]\n}\n\nexport default get_color;","import {Chart} from 'react-chartjs-2';\n\nfunction extend_line(me) {\n\tChart.controllers.myLine = Chart.controllers.line.extend({\n\t\tdraw: function () {\n\t\t\tChart.controllers.line.prototype.draw.apply(this, arguments)\n\t\t\t\n\t\t\tif (me.state.highlight_data_idx == -1) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tfunction setCharAt(str,index,chr) {\n\t\t\t\tif(index > str.length-1) return str;\n\t\t\t\t\treturn str.substr(0,index) + chr + str.substr(index+1);\n\t\t\t}\n\t\t\t\n\t\t\tvar meta = this['chart'].getDatasetMeta(me.state.highlight_data_idx)\n\t\t\tvar ctx = this.chart.ctx;\n\t\t\tvar color = meta['dataset']['_model']['borderColor']\n\t\t\tctx.strokeStyle = color.substr(0, color.length - 2) + \"0.3)\"\n\t\t\tctx.lineWidth = 10;\n\t\t\tctx.beginPath();\n\t\t\tvar point1 = meta['data'][me.state.highlight_idx1]\n\t\t\tctx.moveTo(point1['_model']['x'], point1['_model']['y'])\n\t\t\tvar point2 = meta['data'][me.state.highlight_idx2]\n\t\t\tctx.bezierCurveTo(\n\t\t\t\tpoint1['_model']['x'],\n\t\t\t\tpoint1['_model']['y'],\n\t\t\t\tpoint1['_model']['controlPointNextX'],\n\t\t\t\tpoint1['_model']['controlPointNextY'],\n\t\t\t\tpoint2['_model']['x'],\n\t\t\t\tpoint2['_model']['y']\n\t\t\t);\n\t\t\tctx.stroke();\n\t\t}\n\t});\n\treturn Chart.controllers.myLine;\n}\n\nexport default extend_line;\n","import React from 'react';\nimport ChartComponent, {Chart, Line} from 'react-chartjs-2';\nimport EventsInfo from './EventsInfo'\nimport './styles/PlayerChart.css'\nimport {default_colors} from './ChartConstants'\nimport db from './chart_helpers/api_calls.js'\nimport create_dataset from './chart_helpers/create_dataset'\nimport get_options from './chart_helpers/options'\nimport getYByAge from './chart_helpers/fetch_by_age'\nimport getYByDate from './chart_helpers/fetch_by_date'\nimport get_color from './chart_helpers/color_generator'\nimport extend_line from './chart_helpers/extended_line'\n\nclass PlayerChart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.event_box = React.createRef()\n\t\tthis.state = {\n\t\t\twindow_left_age: 20,\n\t\t\twindow_left_date: '20100101',\n\t\t\twindow_right_age: 30,\n\t\t\twindow_right_date: '20200101',\n\t\t\tx_axis: 'date',\n\t\t\ty_axis: 'rank',\n\t\t\tx_data: [],\n\t\t\ty_data: [],\n\t\t\tavailable_colors: default_colors,\n\t\t\thighlight_data_idx: -1,\n\t\t\thighlight_idx1: 0,\n\t\t\thighlight_idx2: 0,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst init_x_axis = async() => {\n\t\t\tvar x_axis =  await db.get_dates(\n\t\t\t\tthis.state.window_left_date,\n\t\t\t\tthis.state.window_right_date\n\t\t\t)\n\t\t\tthis.setState({\n\t\t\t\tx_data: x_axis\n\t\t\t})\n\t\t}\n\t\tinit_x_axis()\n\t}\n\n\n\n\t/*\n\tadd a player to the chart\n\t*/\n\taddPlayer(player_id, player_name) {\n\t\tif (this.state.y_data.map(x => x['player_id']).includes(player_id)) {\n\t\t\treturn\n\t\t}\n\t\tvar color = get_color(this)\n\t\tvar player_info = {\n\t\t\tplayer_ids: [player_id],\n\t\t\tplayer_names: [player_name],\n\t\t\tplayer_colors: [color]\n\t\t}\n\n\t\tthis.setState({\n\t\t\tavailable_colors: this.state.available_colors.slice(1)\n\t\t})\n\n\t\tif (this.state.x_axis == 'age') {\n\t\t\tgetYByAge(\n\t\t\t\tthis,\n\t\t\t\tthis.state.window_left_age,\n\t\t\t\tthis.state.window_right_age,\n\t\t\t\tthis.state.y_axis,\n\t\t\t\tplayer_info,\n\t\t\t\tthis.state.y_data\n\t\t\t)\n\t\t} else if (this.state.x_axis == 'date') {\n\t\t\tgetYByDate(\n\t\t\t\tthis,\n\t\t\t\tthis.state.window_left_date,\n\t\t\t\tthis.state.window_right_date,\n\t\t\t\tthis.state.y_axis,\n\t\t\t\tplayer_info,\n\t\t\t\tthis.state.y_data\n\t\t\t)\n\t\t}\n\n\t\treturn color;\n\t}\n\n\t/*\n\tremove an existing player from the chart\n\t*/\n\tremovePlayer(player_id) {\n\t\tvar new_available_colors = this.state.available_colors;\n\t\tfor (var i = 0; i < this.state.y_data.length; i++) {\n\t\t\tif (this.state.y_data[i]['player_id'] === player_id) {\n\t\t\t\tnew_available_colors.unshift(this.state.y_data[i]['data']['borderColor'])\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\ty_data: this.state.y_data.filter(x => x['player_id'] !== player_id),\n\t\t\tavailable_colors: new_available_colors\n\t\t})\n\t}\n\n\t/*\n\tchange the range or metric of the xdimension\n\t*/\n\tchangeXDimension(dimension, min_max, new_val) {\n\t\tvar player_info = {\n\t\t\tplayer_ids: this.state.y_data.map(x => x['player_id']),\n\t\t\tplayer_names: this.state.y_data.map(x => x['data']['label']),\n\t\t\tplayer_colors: this.state.y_data.map(x => x['data']['borderColor'])\n\t\t}\n\t\tvar left;\n\t\tvar right;\n\t\tif (dimension == 'age') {\n\t\t\tleft = this.state.window_left_age\n\t\t\tright = this.state.window_right_age\n\t\t} else if (dimension == 'date') {\n\t\t\tleft = this.state.window_left_date\n\t\t\tright = this.state.window_right_date\n\t\t}\n\t\tif (min_max == 'min') {\n\t\t\tleft = new_val\n\t\t} else if (min_max == 'max') {\n\t\t\tright = new_val\n\t\t}\n\n\t\tif (dimension == 'age') {\n\n\t\t\tthis.setState({\n\t\t\t\twindow_left_age: left,\n\t\t\t\twindow_right_age: right\n\t\t\t})\n\n\t\t\tgetYByAge(\n\t\t\t\tthis,\n\t\t\t\tleft,\n\t\t\t\tright,\n\t\t\t\tthis.state.y_axis,\n\t\t\t\tplayer_info,\n\t\t\t\t[]\n\t\t\t)\n\t\t} else if (dimension == 'date') {\n\n\t\t\tthis.setState({\n\t\t\t\twindow_left_date: left,\n\t\t\t\twindow_right_date: right\n\t\t\t})\n\n\t\t\tgetYByDate(\n\t\t\t\tthis,\n\t\t\t\tleft,\n\t\t\t\tright,\n\t\t\t\tthis.state.y_axis,\n\t\t\t\tplayer_info,\n\t\t\t\t[]\n\t\t\t)\n\t\t}\n\t}\n\n\t/*\n\tchange the y metric\n\t*/\n\tchangeYDimension(dimension) {\n\t\treturn\n\t}\n\n\n\trender() {\n\n\t\textend_line(this)\n\t\tconst options = get_options(this)\n\t\tconst data = {\n\t\t\tlabels: this.state.x_data,\n\t\t\tdatasets: this.state.y_data.map(x => x['data'])\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div id='the_chart2'>\n\t\t\t\t\t<ChartComponent\n\t\t\t\t\t\ttype='myLine'\n\t\t\t\t\t\tref=\"graph\"\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t<EventsInfo ref={this.event_box}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default PlayerChart;","import React, {useEffect, useState} from 'react';\nimport { Dropdown } from 'semantic-ui-react'\nimport './styles/PlayerSelector.css'\nimport {endpt_base} from '../../GlobalConstants'\nimport db from './chart_helpers/api_calls'\n\nclass PlayerSelector extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplayers: [],\n\t\t\tplayer_images: {},\n\t\t\tloading: false,\n\t\t\tplaceholder: 'Select a Player',\n\t\t\thovered_player: null,\n\t\t\tinit_load: false\n\t\t}\n\t}\n\n\tconvert_data(data) {\n\t\tconst arr = []\n\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\tlet d = data[i]\n\t\t\tarr.push({\n\t\t\t\ttext: d['last_name'].concat(\", \", d['first_name']),\n\t\t\t\tvalue: d['id'],\n\t\t\t\tkey: d['id']\n\t\t\t})\n\t\t}\n\t\treturn arr\n\t}\n\t\n\n\tset_images(data) {\n\t\tvar hash = {}\n\t\tfor (var d of data) {\n\t\t\thash[d['id']] = d['image']\n\t\t}\n\t\treturn hash\n\t}\n\n\tsetTopTen(loading, init_load) {\n\t\tconst getSetPlayers = async () => {\n\t\t\tvar data = await db.get_top_ten()\n\t\t\tvar images = this.set_images(data)\n\t\t\tconsole.log(images)\n\t\t\tthis.setState({\n\t\t\t\tplayers: this.convert_data(data),\n\t\t\t\timages: images,\n\t\t\t\tinit_load: init_load,\n\t\t\t\tloading:loading,\n\t\t\t})\n\t\t}\n\t\tgetSetPlayers()\n\t}\n\n\tsetTopTenFiltered(filter) {\n\t\tconst getSetPlayers = async () => {\n\t\t\tvar data = await db.get_ten_filtered(filter)\n\t\t\tvar images = this.set_images(data)\n\t\t\tthis.setState({\n\t\t\t\tplayers: this.convert_data(data),\n\t\t\t\timages: images,\n\t\t\t\tloading: false\n\t\t\t})\n\t\t}\n\t\tgetSetPlayers()\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setTopTen(false, true)\n\t}\n\n\n\n\tsearch_change(data) {\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t})\n\t\tconst filter = data['searchQuery']\n\t\tif (filter.length == 0) {\n\t\t\tthis.setTopTen(false, this.state.init_load)\n\t\t}\n\t\telse {\n\t\t\tthis.setTopTenFiltered(filter)\n\t\t}\n\t}\n\n\tlabel_click(data) {\n\t\tvar player_name = null;\n\t\tvar player_id = data['value']\n\t\tvar player_image = this.state.images[player_id]\n\t\tfor (var i = 0; i < data['options'].length; i++) {\n\t\t\tif (data['options'][i]['value'] == player_id) {\n\t\t\t\tplayer_name = data['options'][i]['text']\n\t\t\t}\n\t\t}\n\t\tthis.props.added_player_handler(player_id, player_name, player_image)\n\t}\n\n\topen(d) {\n\t\tif (this.state.init_load == false) {\n\t\t\tthis.setState({\n\t\t\t\tloading: true\n\t\t\t})\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"the_player_selector\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\tselectOnBlur={false}\n\t\t\t\t\tsearch\n\t\t\t\t\tselection\n\t\t\t\t\tonChange={(_, data) => this.label_click(data)}\n\t\t\t\t\tonSearchChange={(_, data) => this.search_change(data)}\n\t\t\t\t\toptions={this.state.players}\n\t\t\t\t\tonOpen = {(e, d) => this.open(d)}\n\t\t\t\t\ttext={'Search a player...'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PlayerSelector;","import React from 'react';\nimport { Slider } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport './styles/DimensionSlider.css'\n\nclass DimensionSlider extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdimension: 'date'\n\t\t}\n\t}\n\n\tchange_age(val, min_max) {\n\t\tthis.props.slider_handler(val, min_max)\n\t}\n\n\tchange_date(val, min_max) {\n\t\tvar new_date = val.toString() + \"0101\"\n\t\tthis.props.slider_handler(new_date, min_max)\n\t}\n\n\tchange_dimension(dimension) {\n\t\tthis.setState({\n\t\t\tdimension: dimension\n\t\t})\n\t}\n\n\trender() {\n\n\t\tfunction AirbnbThumbComponent(props) {\n\t\t\treturn (\n\t\t\t\t<span {...props}>\n\t\t\t\t\t<span className=\"bar\" />\n\t\t\t\t\t<span className=\"bar\" />\n\t\t\t\t\t<span className=\"bar\" />\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\n\t\tconst PrettoSlider = withStyles({\n\t\t\troot: {\n\t\t\t\tcolor: '#2522e0',\n\t\t\t\theight: 8,\n\t\t\t},\n\t\t\tthumb: {\n\t\t\t\theight: 24,\n\t\t\t\twidth: 24,\n\t\t\t\tbackgroundColor: '#fff',\n\t\t\t\tborder: '2px solid currentColor',\n\t\t\t\tmarginTop: -8,\n\t\t\t\tmarginLeft: -12,\n\t\t\t\t'&:focus,&:hover,&$active': {\n\t\t\t\t\tboxShadow: 'inherit',\n\t\t\t\t},\n\t\t\t},\n\t\t\tactive: {},\n\t\t\tvalueLabel: {\n\t\t\t\tleft: 'calc(-50% + 4px)',\n\t\t\t},\n\t\t\ttrack: {\n\t\t\t\theight: 8,\n\t\t\t\tborderRadius: 4,\n\t\t\t},\n\t\t\trail: {\n\t\t\t\theight: 8,\n\t\t\t\tborderRadius: 4,\n\t\t\t},\n\t\t})(Slider);\n\n\t\tif (this.state.dimension == 'age') {\n\t\t\treturn (\n\t\t\t\t<div id=\"the_dimension_slider\">\n\t\t\t\t\t<PrettoSlider\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\taria-label=\"pretto slider\"\n\t\t\t\t\t\tdefaultValue={20}\n\t\t\t\t\t\tonChangeCommitted={(e, data) => this.change_age(data, \"min\")}\n\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\tmax={50}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrettoSlider\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\taria-label=\"pretto slider\"\n\t\t\t\t\t\tdefaultValue={30}\n\t\t\t\t\t\tonChangeCommitted={(e, data) => this.change_age(data, \"max\")}\n\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\tmax={50}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div id=\"the_dimension_slider\">\n\t\t\t\t\t<PrettoSlider\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\taria-label=\"pretto slider\"\n\t\t\t\t\t\tdefaultValue={2010}\n\t\t\t\t\t\tonChangeCommitted={(e, data) => this.change_date(data, \"min\")}\n\t\t\t\t\t\tmin={1972}\n\t\t\t\t\t\tmax={2020}\n\t\t\t\t\t/>\n\t\t\t\t\t<PrettoSlider\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\taria-label=\"pretto slider\"\n\t\t\t\t\t\tdefaultValue={2020}\n\t\t\t\t\t\tonChangeCommitted={(e, data) => this.change_date(data, \"max\")}\n\t\t\t\t\t\tmin={1972}\n\t\t\t\t\t\tmax={2020}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default DimensionSlider;","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport './styles/PlayerChartSwitch.css'\n\n\nclass PlayerChartSwitch extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\n\thandleChange(checked) {\n\t\tif (checked == false) {\n\t\t\tthis.props.dimension_change_handler(\"date\")\n\t\t} else {\n\t\t\tthis.props.dimension_change_handler(\"age\")\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"the_switch\">\n\t\t\t\t<Typography component=\"div\">\n\t\t\t\t\t<Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n\t\t\t\t\t\t<Grid item>By Date</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\tonChange = {(event, checked) => {this.handleChange(checked)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>By Age</Grid>\n\t\t\t\t\t</Grid>\n\t      \t\t</Typography>\n\t      \t</div>\n\t\t)\n\t}\n}\n\n\nexport default PlayerChartSwitch;","import React from 'react';\nimport CurrentPlayers from \"./CurrentPlayers\"\nimport PlayerChart from \"./PlayerChart\"\nimport PlayerSelector from \"./PlayerSelector\"\nimport AgeSlider from \"./DimensionSlider\"\nimport PlayerChartSwitch from './PlayerChartSwitch'\nimport './styles/MainPage.css'\n\nclass MainPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.graph = React.createRef()\n\t\tthis.dimension_slider = React.createRef()\n\t\tthis.current_players = React.createRef()\n\t}\n\n\thandle_slider_change(val, min_max) {\n\t\tthis.graph.current.changeXDimension(\n\t\t\tthis.graph.current.state.x_axis,\n\t\t\tmin_max,\n\t\t\tval\n\t\t)\n\t}\n\n\thandle_added_player(id, name, player_image) {\n\t\tconsole.log(player_image)\n\t\tvar player_color = this.graph.current.addPlayer(id, name)\n\t\tthis.current_players.current.addPlayer(id, name, player_color, player_image)\n\t}\n\n\thandle_removed_player(id) {\n\t\tthis.graph.current.removePlayer(id)\n\t}\n\n\thandle_dimension_change(dimension) {\n\t\tthis.dimension_slider.current.change_dimension(dimension)\n\t\tthis.graph.current.changeXDimension(\n\t\t\tdimension,\n\t\t\tnull,\n\t\t\tnull\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"the_age_comparison\">\n\t\t\t\t<div id=\"player_selector_and_current_players\">\n\t\t\t\t\t<PlayerSelector\n\t\t\t\t\t\tadded_player_handler={(pl_id, pl_name, pl_image) => this.handle_added_player(pl_id, pl_name, pl_image)}\n\t\t\t\t\t/>\n\t\t\t\t\t<CurrentPlayers\n\t\t\t\t\t\tref={this.current_players}\n\t\t\t\t\t\tremoved_player_handler={(id) => this.handle_removed_player(id)}\n\t\t\t\t\t/>\n\t\t\t\t\t<PlayerChartSwitch\n\t\t\t\t\t\tdimension_change_handler = {(dim) => this.handle_dimension_change(dim)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"chart_and_slider\">\n\t\t\t\t\t<PlayerChart\n\t\t\t\t\t\tref={this.graph}\n\t\t\t\t\t/>\n\t\t\t\t\t<AgeSlider\n\t\t\t\t\t\tref = {this.dimension_slider}\n\t\t\t\t\t\tslider_handler={(val, min_max) => this.handle_slider_change(val, min_max)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MainPage;","import React from 'react';\n\nclass Head2Head extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\th2h\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Head2Head;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\"\nimport MainPage from \"./components/MainPage/MainPage\"\nimport Head2Head from \"./components/Head2Head/Head2Head\"\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div id=\"the_app\">\n      <Header />\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/h2h\" component={Head2Head} />\n        </Switch>\n      </HashRouter>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nimport dotenv from 'dotenv'\nconst res = dotenv.config()\nconsole.log(res)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}